apply from: './version.gradle'

buildscript {
    ext {
        kotlinVersion = '1.3.70'
        jacksonVersion = '2.10.1'
        ktlintVersion = '0.36.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // Kotlin Language
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group = projectGroup
version = projectVersion

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    if (project.hasProperty("AWS_REPO_URL")) {
        maven {
            url AWS_REPO_URL
            credentials(AwsCredentials) {
                accessKey AWS_REPO_USER_ACCESS_KEY
                secretKey AWS_REPO_USER_SECRET_KEY
            }
        }
    }
    mavenCentral()
    jcenter()
}

configurations {
    formattingOnly
}

dependencies {
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.4.0'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'org.apache.commons:commons-lang3:3.6'
    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = projectGroup
            artifactId = projectName
            version = projectVersion

            from components.java

            repositories {
                if (project.hasProperty("AWS_REPO_URL")) {
                    maven {
                        url AWS_REPO_URL
                        credentials(AwsCredentials) {
                            accessKey AWS_REPO_ADMIN_ACCESS_KEY
                            secretKey AWS_REPO_ADMIN_SECRET_KEY
                        }
                    }
                }
                if (project.hasProperty("MAVEN_REPO_URL")) {
                    maven {
                        url MAVEN_REPO_URL
                        credentials {
                            username = MAVEN_REPO_ADMIN_USERNAME
                            password = MAVEN_REPO_ADMIN_PASSWORD
                        }
                    }
                }
            }
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.formattingOnly
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.formattingOnly
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

